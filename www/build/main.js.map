{"version":3,"sources":["../../src/pages/details/details.ts","../../node_modules/_@angular_core@4.4.3@@angular/core/@angular lazy","../../node_modules/_ionic-angular@3.9.2@ionic-angular/util lazy","../../src/pages/tabs/tabs.ts","../../src/pages/chat/chat.ts","../../src/pages/chatdetails/chatdetails.ts","../../src/providers/chatservice/chatservice.ts","../../src/pages/home/home.ts","../../src/pages/question/question.ts","../../src/pages/answer/answer.ts","../../src/pages/discovery/discovery.ts","../../src/pages/notification/notification.ts","../../src/pages/more/more.ts","../../src/pages/login/login.ts","../../src/pages/register/register.ts","../../src/pages/user/user.ts","../../src/pages/headface/headface.ts","../../src/providers/emoji/emoji.ts","../../src/app/main.ts","../../src/providers/rest/rest.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/common/baseui.ts","../../src/components/components.module.ts","../../src/components/emojipicker/emojipicker.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { \n  IonicPage, \n  NavController,\n  NavParams,\n  ToastController,\n  LoadingController,\n  ModalController,\n} from 'ionic-angular';\nimport { BaseUI } from '../common/baseui';\nimport { RestProvider } from '../../providers/rest/rest';\nimport {Storage} from '@ionic/storage';\nimport {AnswerPage} from '../answer/answer';\n \n/**\n * Generated class for the DetailsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-details',\n  templateUrl: 'details.html',\n})\nexport class DetailsPage extends BaseUI {\n\nid:string;\nquestion:string[];\nanswers:string[];\nerrorMessage:any;\nuserId:string;\nisFavourite:boolean;\nisMyQuestion:boolean;\n// 是否是我的问题\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public rest:RestProvider,\n    public toastCtrl:ToastController,\n    public loadingCtrl:LoadingController,\n    public storage:Storage,\n    public modalCtrl:ModalController,\n  ) {\n    super();\n  }\n\n  ionViewDidLoad() {\n    // 刚才push 传递了参数 id,那么此时接受参数id \n  // 既是参数的获取，获取参说的传递\n   this.id=this.navParams.get('id');\n    this.loadQuestion(this.id);\n\n  }\n  loadQuestion(id){//加载问题详情\n\n    this.storage.get('UserId').then((val)=>{\n      if(val!==null){\n        this.userId=val;\n        var loading=super.showLoading(this.loadingCtrl,\"加载中...\");\n        this.rest.getQuestionWithUser(id,val)//调用方法，记得定义（此方法在rest中定义）\n        .subscribe(  //传递对应的参数\n          q=>{this.question=q;\n            this.answers=q[\"Answers\"]; //q 里有个answers 数组里有个数组，\n            //可以展示多个回答，也可能后台id 未查到，为空\n            loading.dismiss();\n            this.isFavourite=q[\"IsFavourite\"];\n            this.isMyQuestion = (q[\"OwnUserId\"]==val);\n          },\n          error=>this.errorMessage=<any>error);\n          //然后可以进行数据的绑定\n      }\n    });\n   \n  }\n  saveFavourite(){\n    var loading=super.showLoading(this.loadingCtrl,\"请求中...\");\n    this.rest.saveFavourite(this.id,this.userId)\n    .subscribe(f=>{\n      if(f[\"Status\"]==\"OK\"){\n        loading.dismiss();\n        super.showToast(this.toastCtrl,this.isFavourite?\"取消关注成功\":\"关注问题成功\");\n        // 如过已经关注，变成取消关注，否则关注\n       this.isFavourite=!this.isFavourite\n      }\n    },error=>this.errorMessage=<any>error)\n   }\n\n   showAnswerPage(){\n      let modal=this.modalCtrl.create(AnswerPage,{\"id\":this.id});// modal传参\n      //关闭后的回调\n      modal.onDidDismiss(()=>{\n        this.loadQuestion(this.id);//这样回调后，回答完毕后，父页面同时进行了刷新\n      });\n      modal.present();\n   }\n   //\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/details/details.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 146;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_@angular_core@4.4.3@@angular/core/@angular lazy\n// module id = 146\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 189;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ionic-angular@3.9.2@ionic-angular/util lazy\n// module id = 189\n// module chunks = 0","import { Component } from '@angular/core';\nimport {ChatPage} from '../chat/chat'\nimport { HomePage } from '../home/home';\nimport { DiscoveryPage } from '../discovery/discovery';\nimport { NotificationPage } from '../notification/notification';\nimport { MorePage } from '../more/more';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tabHome = HomePage;\n  tabDiscovery = DiscoveryPage;\n  tabChat = ChatPage;\n  tabNotification=NotificationPage;\n  tabMore=MorePage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams } from 'ionic-angular';\nimport { ChatdetailsPage } from '../chatdetails/chatdetails';\n\n@Component({\n  selector: 'page-chat',\n  templateUrl: 'chat.html',\n})\nexport class ChatPage {\n// 定义一个对象\nuserinfo:Object;  \nChatdetailsPage:any;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams) {\n    //在此处可以直接从你的api 接口或者其他方法实现用户列表的定义。\n    this.userinfo={\n      userid:'123321',\n      username:'魔女'\n    }  //定义用户列表n    this.ChatdetailsPage=ChatdetailsPage;\n  //  this.ChatdetailsPage是 ChatdetailsPage:any; 定义，等于的是导入的\n  //   import { ChatdetailsPage } from '../chatdetails/chatdetails';\n\n  }\n    \n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat/chat.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams,IonicPage } from 'ionic-angular';\nimport { ChatserviceProvider, ChatMessage} from '../../providers/chatservice/chatservice'\n@IonicPage()\n@Component({\n  selector: 'page-chatdetails',\n  templateUrl: 'chatdetails.html',\n})\nexport class ChatdetailsPage{\n\n  chatUserName:string;\n  isOpenEmojiPicker = false;\n  messageList:ChatMessage[]=[]; // =[] 意思是初始的是空 \n  \n  // 定义\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public chatservice:ChatserviceProvider){\n\n    this.chatUserName=navParams.get('username');\n    // 获取 userinfo中 username 界面传递过来的值,每一步开发要检查以下\n    \n  }\n\n\n  应该页面进来的时候\n\n   ionViewDidEnter(){\n     this.getMessages()\n     .then(()=>{\n       this.scrollToBottom();\n     });\n   }\n\n\n\n\n// 定义一个 getMessages 方法 调用刚才chatservice定义的方法\n// 注意import 和 在 constructor()\n//\n/**\n *调用service里面的方法进行属性的赋值\n *\n * @returns\n * @memberof ChatdetailsPage\n */\ngetMessages(){\nreturn this.chatservice.getMessageList()\n.then(res=>{\n  this.messageList=res;//给messageList 赋值  赋值为返货的值 \n})\n.catch(error=>{\n  console.error(error);\n})\n  }\n// 切换表情组件\n  switchEmojiPicker(){\n    this.isOpenEmojiPicker=!this.isOpenEmojiPicker\n  }\n\n  scrollToBottom():any{\n    // 滚动实现方法，一会来实现\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chatdetails/chatdetails.ts","\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n// import { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n//聊天信息的属性\nexport class ChatMessage{\n  messageId:string;\n  userId:string;\n  username:string;\n  userImgUrl:string;\n  toUserId:string;\n  time:number|string;\n  message:string;\n  status:string;\n}\n//用户信息属性\nexport class UserInfo{\n  userId:string;\n  userName:string;\n  userImageUrl:string;\n}\n@Injectable()\nexport class ChatserviceProvider {\n\n  constructor(public http: Http) {\n   \n  }\n  \n/**\n *获取消息列表\n *从Api 获取或者从模拟的JSON获取\n * @returns {Promise<ChatMessage[]>}\n * @memberof ChatserviceProvider\n */\ngetMessageList():Promise<ChatMessage[]>{\n  const url='../../assets/mock/msg-list.json';\n\n  return this.http.get(url)//从json里边获得url\n  .toPromise()//\n  .then(response=>response.json().array as ChatMessage[]) // json 强制转换成数组，chatMessage[]\n  .catch(error=>Promise.reject(error|| '错误信息'));//异常捕获返回告诉调用的地方，异常信息\n}\n}\n \n\n\n// WEBPACK FOOTER //\n// ./src/providers/chatservice/chatservice.ts","import { Component } from '@angular/core';\nimport { \n  NavController ,\n  ModalController,\n  Tabs,\n  LoadingController\n} from 'ionic-angular';\nimport { QuestionPage } from '../question/question';\nimport { BaseUI} from '../common/baseui';\nimport { RestProvider } from '../../providers/rest/rest';\nimport { DetailsPage } from '../details/details';\n// import{ ChatPage} from '../chat/chat';\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage extends BaseUI {\n//  内部对象定义,丢到前台循环渲染\n feeds:string[];\n errorMessage:any;\n  constructor(\n    public navCtrl: NavController,\n    public modalCtrl:ModalController,\n    public loadingCtrl:LoadingController,\n    public rest:RestProvider,\n  \n  ) {\n      super();\n  }\n  \n\n  ionViewDidLoad(){\n    this.getFeeds();\n  }\n\n\n\n  gotoQuestion(){\n  var modal=this.modalCtrl.create(QuestionPage);\n  modal.present();\n  }\n\n\n/**\n *选择指定的tabs\n *\n * @memberof HomePage\n */\ngotoChat(){\n  //   var modal=this.modalCtrl.create(ChatPage);\n  // modal.present();\n      this.selectTab(2);\n  }\n  // 选择也页面的有几种方式\n// 选择哪一个tab\n  selectTab(index:number){\n  var t:Tabs=this.navCtrl.parent;//定义一个参数 t 类型是 tabs，定义在ionic-angualr\n  //navCtrl 控制额是，首页 内容视图的东西。他的 parent父级，就是  tabs层级\n  t.select(index);\n\n  }\n\n  getFeeds(){\n         var loading=super.showLoading(this.loadingCtrl,\"数据加载中\");\n         this.rest.getFeeds()\n         .subscribe(\n           f=>{\n             this.feeds=f;\n             loading.dismiss();\n           },\n           error=>this.errorMessage=<any>error);\n  }\n  gotoDetails(questionId){\nthis.navCtrl.push(DetailsPage,{id:questionId});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams,ViewController,LoadingController,ToastController } from 'ionic-angular';\nimport { RestProvider } from '../../providers/rest/rest';\nimport {Storage} from '@ionic/storage';\nimport { BaseUI } from '../common/baseui';\n\n// IonicPage,\n/**\n * Generated class for the QuestionPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// @IonicPage()\n@Component({\n  selector: 'page-question',\n  templateUrl: 'question.html',\n})\nexport class QuestionPage extends BaseUI {\n\ntitle:string;\ncontent:string;\nerrorMessage:any;\n\n  constructor(\n    public navCtrl: NavController,\n     public navParams: NavParams,\n     public viewCtrl:ViewController,\n    public rest:RestProvider,\n    public storage:Storage,\n    public loadingCtrl:LoadingController,\n    public toastCtrl:ToastController,\n    \n    ) {\n      super();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad QuestionPage');\n  }\n\n  dismiss(){\n    this.viewCtrl.dismiss();\n  }\n\n  submitQuestion(){\n    // 先获取userid  需要做一些构造\n \n    this.storage.get('UserId').then((val)=>{\n          if(val!=null){\n        var loading=super.showLoading(this.loadingCtrl,\"发表中...\");\n        this.rest.saveQuestion(val,this.title,this.content)\n        .subscribe(f=>{\n          if(f[\"Status\"]==\"OK\"){\n                    loading.dismissAll();\n                    this.dismiss();\n          }else{\n            loading.dismissAll();\n            super.showToast(this.toastCtrl,f[\"StatusContent\"]);\n          }\n          \n        },error=>this.errorMessage=<any>error);\n      }\n      else{\n        super.showToast(this.toastCtrl,\"请登录后发布提问\");\n      }\n      \n    });\n  }\n\n// 到聊天的窗口\ngotoChat(){\n  \n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/question/question.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams,ViewController,LoadingController,\n  ToastController} from 'ionic-angular';\nimport { BaseUI } from '../common/baseui';\nimport {Storage } from '@ionic/storage';\nimport { RestProvider } from '../../providers/rest/rest';\n/**\n * Generated class for the AnswerPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// @IonicPage()\n@Component({\n  selector: 'page-answer',\n  templateUrl: 'answer.html',\n})\nexport class AnswerPage extends BaseUI {\n   id:string;\n   errorMessage:any;\n   content:string;\n\n  constructor(\n    public navCtrl: NavController,\n     public navParams: NavParams,\n     public viewCtrl:ViewController,\n     public storage:Storage,\n     public loadingCtrl:LoadingController,\n     public rest:RestProvider,\n     public toastCtrl:ToastController,\n    \n    ) {\nsuper();\nthis.id=navParams.get('id');//接受传递过来的参数\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AnswerPage');\n  }\ndismiss(){\n  this.viewCtrl.dismiss();\n}\nsubmit(){\n    this.storage.get('UserId').then((val)=>{\n      if(val!=null){\n        var loading=super.showLoading(this.loadingCtrl,'发表中...')\n        this.rest.answer(val,this.id,this.content)\n        .subscribe(f=>{\n                if(f[\"Status\"]==\"OK\"){\n                loading.dismissAll();\n                this.dismiss();\n                \n                }else{\n                loading.dismissAll();\n                super.showToast(this.toastCtrl,f[\"StatusContent\"]);\n                }\n        },error=>this.errorMessage=<any>error);\n      }\n      else{\n        super.showToast(this.toastCtrl,\"请登陆回答\")\n      }\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/answer/answer.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams ,ModalController,LoadingController} from 'ionic-angular';\nimport { RestProvider } from '../../providers/rest/rest';\nimport { BaseUI } from '../common/baseui';\nimport { DetailsPage } from '../details/details';\n\n/**\n * Generated class for the DiscoveryPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// @IonicPage()\n@Component({\n  selector: 'page-discovery',\n  templateUrl: 'discovery.html',\n})\nexport class DiscoveryPage  extends BaseUI{\n  \n// 加载所有的questions\nquestions:string[];\nerrorMessage:any;\n\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public modalCtrl:ModalController,\n    public loadingCtrl:LoadingController,\n    public rest:RestProvider\n  \n  ) {\nsuper();\n  }\n\n  ionViewDidLoad() {\n   this.getQuestions();\n  }\n\n  getQuestions(){\n    var loading=super.showLoading(this.loadingCtrl,\"数据加载中\");\n    this.rest.getQuestions()\n    .subscribe(\n      q=>{\n        this.questions=q;\n        loading.dismiss();\n      },\n      error=>this.errorMessage=<any>error);\n}\n\ndoRefresh(refresher){\nthis.getQuestions(); //页面刷新的时候重新做一下问题加载\nrefresher.comple();// 整个刷新完成关闭\n}\n\ngotoDetails(questionId){\n  this.navCtrl.push(DetailsPage,{id:questionId});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/discovery/discovery.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the NotificationPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-notification',\n  templateUrl: 'notification.html',\n})\nexport class NotificationPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad NotificationPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notification/notification.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams,ModalController,LoadingController } from 'ionic-angular';\nimport { LoginPage } from '../login/login';\nimport { Storage } from '@ionic/storage'\nimport { BaseUI } from '../common/baseui';\nimport { RestProvider } from '../../providers/rest/rest';\nimport {UserPage} from '../user/user';\n/**\n * Generated class for the MorePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n// IonicPage,\n// @IonicPage()\n@Component({\n  selector: 'page-more',\n  templateUrl: 'more.html',\n})\nexport class MorePage extends BaseUI {\n    public notLogin:boolean=true;\n    public logined:boolean=false;\n    headface:string;\n    userinfo:string[];\n    constructor(\n     public navCtrl: NavController,\n     public navParams: NavParams,\n     public modalCtrl:ModalController,\n     public storage:Storage,\n     public loadingCtrl:LoadingController,\n     public rest:RestProvider,\n    ) {\n      super();\n  }\n// 学习的本质就是重复\n  // ionViewDidLoad() { 这个是生命周期，暂时用不到先注释掉\n  //   console.log('ionViewDidLoad MorePage');\n  // }\nshowModal(){\n// 新建一个login\nconst modal = this.modalCtrl.create(LoginPage);\nmodal.present();\n}\nionViewDidEnter(){\n  this. loadUserPage();\n}\n\n\n loadUserPage(){\n\n  this.storage.get('UserId').then((val)=>{\n    if(val!=null){\n    // 用户登陆过\n     var loading=super.showLoading(this.loadingCtrl,\"加载中...\");\n     this.rest.getUserInfo(val)\n     .subscribe(\n       userinfo=>{\n         this.userinfo=userinfo;\n         this.headface=userinfo[\"UserHeadface\"]+\"?\"+(new Date()).valueOf();\n         this.notLogin=false;\n         this.logined=true;\n         loading.dismiss();\n       }\n     );\n    // 加载用户数据\n    }\n    else{\n\n      this.notLogin=true;\n      this.logined=false;\n      \n    }\n  });\n}\n\ngotoUserPage(){\n  this.navCtrl.push(UserPage)\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/more/more.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams ,ViewController,LoadingController,ToastController} from 'ionic-angular';\nimport { BaseUI } from '../common/baseui';\nimport { RestProvider } from '../../providers/rest/rest';\nimport { Storage } from '@ionic/storage';\nimport { RegisterPage } from '../register/register'\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// @IonicPage()  import IonicPage,\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\n// export class LoginPage { etends BaseUi 是一个扩展类是一个他的父类\n  export class LoginPage extends BaseUI{\n// 定义好电话和密码\n  mobile:any;  //属性\n  password:any;\n  errorMessage:any; //做一下定义\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public viewCtrl:ViewController, //控制视图的显隐,\n    public loadingCtrl:LoadingController,\n   //  做一下构造REST构造\n    public rest:RestProvider,\n    public toastCtrl:ToastController,\n    public storage:Storage,\n  ) {\n    super();//显示调用父类 的构造函数BaseUI\n  }\n\n\n  ionViewDidLoad(){\n      console.log('ionViewDidLoad LoginPage');\n     }\n\nlogin(){\n\n      //  需要请求api\n      // 加载时有个loading: 因为多处可以用所以搞个封装；公用一个类实现\n      var loading = super.showLoading(this.loadingCtrl,\"登陆中...\");\n      // 接着进行rest请求,去rest 定义方法\n      this.rest.login(this.mobile,this.password)\n      .subscribe(\n        f => {\n          if(f[\"Status\"]==\"OK\"){   //返回json 状态\n            //如果处理成功，进入登陆成功的页面跳转\n  //  storage 存储用户登陆的信息，你也可以储存接口返回的token\n  // 每次验证用户是否是真实的用户，是否存在欺骗,攻击性的代码\n            this.storage.set('UserId',f[\"UserId\"]);   //x先存储userID \n             loading.dismiss(); //储存好代码后加载中的界面dismiss 掉\n             //弹出的login 页面也要dismiss 掉\n             this.dismiss();\n\n          }\n          else{\n            // 如果没有登陆成功，则进去一个弹窗界面\n            // 把这个登陆界面隐藏掉\n            loading.dismiss();\n            // this.dismiss();\n            //如果登陆失败后显示的是从后端获取的状态\n            super.showToast(this.toastCtrl,f[\"StatusContent\"]);\n            // 登陆失败，第一个参数传第一个类的ctrl，第二个类是失败的原因内容\n          }\n        },\n        error=>this.errorMessage=<any>error);\n}\n/**\n *关闭当前页面方法\n *\n * @memberof LoginPage\n */\ndismiss(){\n    this.viewCtrl.dismiss()\n    \n  }\n\n pushRegisterPage(){\n    this.navCtrl.push(RegisterPage);\n  }\n\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams,ViewController,LoadingController,ToastController } from 'ionic-angular';\nimport { BaseUI } from '../common/baseui';\nimport { RestProvider} from \"../../providers/rest/rest\"\n// import {Storage} from '@ionic/storage'\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// @IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage extends BaseUI {\n  mobile:any;\n  password:any;\n  nickname:any;\n confirmPassword:any;\n errorMessage:any;\n  constructor(public navCtrl: NavController,\n     public navParams: NavParams,\n     public loadingCtrl:LoadingController,\n     public viewCtrl:ViewController,\n    public rest:RestProvider,\n  public toastCtrl:ToastController) {\n       super();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RegisterPage');\n  }\n  dismiss(){\n    this.viewCtrl.dismiss();\n  }\n\n  gotoLogin(){\n  this.navCtrl.pop();\n}\n\ndoRegister(){\n//前台验证表单数据的正确性\n//包括手机号码，验证国内手机号码格式，昵称的长度，密码的长度\n//考虑所有的当前手机号码的可能性\n\nif(!(/^1[34578]\\d{9}$/.test(this.mobile))){\n  super.showToast(this.toastCtrl,'您的手机号码格式不正确');\n}else if(this.nickname.length<3 || this.nickname>10){\n  super.showToast(this.toastCtrl,'昵称长度应该在3-10之间');\n}\nelse if( \n  this.password<6 || this.password>20){\n    super.showToast(this.toastCtrl,'密码长度在6-20之间');\n  }else if (\n  this.confirmPassword.length<6 || this.confirmPassword.length>20){\n    super.showToast(this.toastCtrl,'密码长度在6-20之间')\n  }\n//密码验证\n \n\n\n  if(this.password!=this.confirmPassword){\n  super.showToast(this.toastCtrl,'两次输入密码不一致')\n  }\n  else{\n    var loading= super.showLoading(this.loadingCtrl,'注册中...');\n  this.rest.register(this.mobile,this.nickname,this.password)\n.subscribe(\n  f=>{\n    if(f[\"Status\"]==\"ok\"){\n      loading.dismiss();\n      super.showToast(this.toastCtrl,\"注册成功\")\n      this.dismiss();\n    }else{\n      loading.dismiss();\n      super.showToast(this.toastCtrl,f[\"StatusContent\"]);\n      this.dismiss();\n    }\n  },\n  error=>this.errorMessage=<any>error);\n  }\n  \n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams } from 'ionic-angular';\nimport { HeadfacePage } from '../headface/headface';\n\n/**\n * Generated class for the UserPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n// IonicPage,\n// @IonicPage()\n@Component({\n  selector: 'page-user',\n  templateUrl: 'user.html',\n})\nexport class UserPage {\n  headface:string;\n  userinfo:string[];\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad UserPage');\n  }\n\n\n  gotoHeadface(){\n    this.navCtrl.push(HeadfacePage)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/user.ts","import { Component } from '@angular/core';\nimport { \n   NavController, \n   NavParams,\n   ModalController,\n  ActionSheetController,\n  LoadingController,\n  Platform,\n  ToastController,\n  ViewController,\n  normalizeURL,\n } from 'ionic-angular';\nimport { BaseUI } from '../common/baseui';\nimport {Storage} from '@ionic/storage';\nimport { RestProvider} from '../../providers/rest/rest';\n\n// 调用摄像头\n// npm install --save @ionic-native/file @ionic-native/file-path @ionic-native/transfer   @ionic-native /camera \n// ionic cordova plugin add cordova-plugin-camera --save  相机     @4.3.2\n// ionic cordova plugin add cordova-plugin-file --save  本地文件   @  4.3.2\n// ionic cordova plugin add cordova-plugin-file-transfer  --save   传输相关文件     3.14.0\n// ionic cordova plugin add cordova-plugin-filepath --save   路径相关 @4.3.2\nimport {File} from '@ionic-native/file';\nimport {Transfer,TransferObject} from '@ionic-native/transfer';\n// TransferObject\nimport {FilePath} from '@ionic-native/File-path';\nimport {Camera} from '@ionic-native/camera';\n\ndeclare var cordova:any;//导入第三方库，\n\n// IonicPage,\n/**\n * Generated class for the HeadfacePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// @IonicPage()\n@Component({\n  selector: 'page-headface',\n  templateUrl: 'headface.html',\n})\nexport class HeadfacePage  extends BaseUI{//继承与BaseUI\n\n\n  userId:string;\n  errorMessage:string;\n  lastImage:string=null;// 保存最后一次\n\n\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public viewCtrl:ViewController,\n    public actionSheetCtrl:ActionSheetController,\n    public storage:Storage,\n    public modalCtrl:ModalController,\n    public rest:RestProvider,\n    public loadingCtrl:LoadingController,\n    public camera:Camera,\n    public file:File,\n    public filePath:FilePath,\n    public transfer:Transfer,\n    public platform:Platform,\n    public toastCtrl:ToastController,\n\n\n  ) {\n    super();\n  }\n\n\n// 每次加载进来，从storage 本地存储把 UserId 拿出来，存储图片的时候用到\n  ionViewDidEnter() {// 获取UserId\n    this.storage.get('UserId').then((val)=>{\n      if(val!=null){  // 如果val 不等与空，那么我们在下边赋值\n        this.userId=val;\n      }\n    });\n  }\n\n  presentActionSheet(){\n  let actionSheet=this.actionSheetCtrl.create({\n    title:'选择图片',\n    buttons:[\n      {\n        text:'从图片库中选择',\n        handler:()=>{\n        this.takePicture(this.camera.PictureSourceType.PHOTOLIBRARY);\n        }\n    \n    },\n      {\n        text:'使用相机',\n        handler:()=>{\n       this.takePicture(this.camera.PictureSourceType.CAMERA);\n        }\n      },\n      {\n        text:'取消',\n        role:'cancel'\n        \n      }\n    ],\n  });\n  actionSheet.present();\n  }\n//这个函数 大，多看几遍  9-5  获取图片\n  takePicture(sourceType){\n   // 定义相机的一些参数\n   var options={\n     quality:100, // 拍照质量 100\n     sourceType: sourceType,\n     saveToPhotoAlbum:false,//是否保存拍摄照片到相册中去\n     correctOrientation:true,//是否纠正拍摄的照片的方向\n\n   };\n   //获取图片的方法\n   this.camera.getPicture(options).then((imagePath)=>{\n     //特别处理android 平台的文件路径问题\n     if(this.platform.is('android') && sourceType=== this.camera.PictureSourceType.PHOTOLIBRARY){\n     this.filePath.resolveNativePath(imagePath)  //获取android下的真实路径\n     .then(filePath=>{\n       //获取正确的路径\n       let correctPath=filePath.substr(0,filePath.lastIndexOf('/')+1);\n       //获取正确的文件名\n       let currentName=imagePath.substring(imagePath.lastIndexOf('/')+1,imagePath.lastIndexOf('?'));\n       this.copyFileToLocalDir(correctPath,currentName,this.createFileName());\n     })\n     }\n     else{\n       //获取正确的路径\n      let correctPath=imagePath.substr(0,imagePath.lastIndexOf('/')+1);\n      //获取正确的文件名\n      let currentName=imagePath.substring(0,imagePath.lastIndexOf('/')+1);\n      this.copyFileToLocalDir(correctPath,currentName,this.createFileName());\n     }\n   },(err)=>{\n     super.showToast(this.toastCtrl,\"选择图片出现错误，请在app中检查权限\")\n   });\n  }\n\n  // 将获取到的图片或者相机拍摄到的图片进行一下另存为，用于后期图片上传的后期使用\n  copyFileToLocalDir(namePath,currentName,newFileName){\n    this.file.copyFile(namePath,currentName,cordova.file.dataDirectory,newFileName).then(success=>{\n      this.lastImage=newFileName;\n    },erro=>{\n      super.showToast(this.toastCtrl,'存储图片到本地的图库出现错误');\n    });\n  }\n\n  //为文件生成一个新的文件名\n  createFileName(){\n    var d=new Date(),// 日期做一个 唯一值取到值\n    n=d.getTime(),// 精确的时间\n    newFileName=n+\".jpg\";\n    return newFileName;\n  }\n\n  // 处理图片的路径为可以上传的路径\n   public pathForImage(img){\n    if(img === null){\n      return '';\n    }else{\n      return normalizeURL(cordova.file.dataDirectory+img);\n      // 此处为官方bug  新版本无次问题\n    }\n  }\n\n // ### fileTransfer上传的参数\n uploadImage(){\n   var url='https://imoocqa.gugujiankong.com/api/account/uploadheadface';\n   var targetPath=this.pathForImage(this.lastImage);\n   var filename=this.userId+\".jpg\";//定义上传的文件名\n   var options={\n     fileKey:'file',\n     fileName:filename,\n     chunkedMode:false,\n     mimeType:\"multipart/form-data\",\n     params:{'fileName':filename,'userid':this.userId }\n   };\n   const fileTransfer:TransferObject=this.transfer.create();\n   var loading=super.showLoading(this.loadingCtrl,\"上传中...\");\n//开始上传\nfileTransfer.upload(targetPath,url,options).then(data=>{\nloading.dismiss();\nsuper.showToast(this.toastCtrl,'图片上传成功');\n// 用户看清弹窗提示后进行页面的关闭\nsetTimeout(()=>{\n  this.viewCtrl.dismiss();\n},3000);\n} ,err=>{\n  loading.dismiss();\n  super.showToast(this.toastCtrl,\"图片上传发生从未，请重试.\")\n});\n }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/headface/headface.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the EmojiProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class EmojiProvider {\n\n  constructor(public http: HttpClient) {\n    //console.log('Hello EmojiProvider Provider');\n  \n  }\n  /**\n   *获取所有表情的数据（已分好了组）\n   *\n   * @memberof EmojiProvider\n   */\n  getEmojis(){\n\n  // 定义emojis 表情包\n   const EMOJIS=\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\"\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\"\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\"\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\"\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\"\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\"\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\"\n   \"😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆 😄 🙂 😂 😕 😕 😁 😅 😓 😃 😵 😆\";\n   \n \n   //然后进行分组的操作\n   let array=EMOJIS.split(' ');//用空格分组\n   let groupNumber=Math.ceil(array.length/10);//  四舍五入的意思 ，但是取大，比如12.1 要取13\n  let items=[];\n  //分组填充表情\n  for(let i=0; i<groupNumber;i++){\n    items.push(array.slice(10*i,10*(i+1)))\n  }\n   return items;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/emoji/emoji.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { Http,Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\n/*\n  Generated class for the RestProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class RestProvider {\n\n  constructor(public http: Http) {\n   // console.log('Hello RestProvider Provider');\n\n  }\n//feed\nprivate apiUrlFeeds='https://imoocqa.gugujiankong.com/api/feeds/get';\n//account\nprivate apiUrlRegister='https://imoocqa.gugujiankong.com/api/account/register';\nprivate apiUrlLogin='https://imoocqa.gugujiankong.com/api/account/login';\nprivate apiUrlUserInfo='https://imoocqa.gugujiankong.com/api/account/userinfo';\nprivate apiUrlUpdateNickName='https://imoocqa.gugujiankong.com/api/account/updatenickname';\n\n//question\n\nprivate apiUrlQuestionSave='https://imoocqa.gugujiankong.com/api/question/save';\n\nprivate apiUrlQuestionList='https://imoocqa.gugujiankong.com/api/question/list?index=1&number=10;';\nprivate apiUrlGetQuestion='https://imoocqa.gugujiankong.com/api/question/get';\nprivate apiUrlAnswer='https://imoocqa.gugujiankong.com/api/question/answer';\nprivate apiUrlGetQuestionWithUser='https://imoocqa.gugujiankong.com/api/question/getwithuser';\nprivate apiUrlSaveFavourite='https://imoocqa.gugujiankong.com/api/question/savefavourite';\n/**\n *根据用户的手机号码和密码进行登陆\n * 注意安全性方面要有详细的设计和处理，\n * //密码的传递应该在传递参数之前经行加密，\n * 并且服务端也要做相应的处理\n * @param {*} mobile\n * @param {*} password\n * @returns {Observable<string[]>}\n * @memberof RestProvider\n */\n\n  \n \n \n \n login(mobile,password):Observable<string[]>{\n  return this.getUrlReturn(this.apiUrlLogin+\"?mobile=\"+mobile+\"&password=\"+password);\n}\n// login 方法会返回observable 的 一个对象，就会调用 this.getUrlReturn的方法\n// 然后做一些 url 的拼接，两个参数是前边传递进来的\n\n\n\n   register(mobile,nickname,password):Observable<string[]>{\n      return this.getUrlReturn(this.apiUrlRegister+\"?mobile=\"+mobile+\"&nickname=\"+nickname+\"&password=\"+password)\n    }\n\n    getUserInfo(userId):Observable<string[]>{\n      return this.getUrlReturn(this.apiUrlUserInfo+\"?userId=\"+userId)\n    }\n updateNickName(userId,nickname):Observable<string[]>{\n   return this.getUrlReturn(this.apiUrlUpdateNickName+\"?userid=\"+userId+\"&nickname\"+nickname);\n }\nsaveQuestion(userId,title,content):Observable<string[]>{\n  return this.getUrlReturn(this.apiUrlQuestionSave+\"?userid=\"+userId+\"&title=\"+title+\"&content=\"+content);\n}\nsaveFavourite(questionId,userId):Observable<string[]>{\nreturn this.getUrlReturn(this.apiUrlSaveFavourite+\"?questionid=\"+questionId+\"&userid=\"+userId)\n}\n\n/**\n *获取问题详情\n *\n * @param {*} id\n * @returns {Observable<string[]>}\n * @memberof RestProvider\n */\ngetQuestion(id):Observable<string[]>{\nreturn this.getUrlReturn(this.apiUrlGetQuestion+\"?id=\"+id);\n}\n/**\n *获取问题的详情，传递userid 获取到当前用户有没有关注此问题\n *\n * @param {*} questionId\n * @param {*} userId\n * @returns {Observable<string[]>}\n * @memberof RestProvider\n */\ngetQuestionWithUser(questionId,userId):Observable<string[]>{\nreturn this.getUrlReturn(this.apiUrlGetQuestionWithUser+\"?id=\"+questionId+\"&userid=\"+userId);\n}\n//feeds  被关注了，被回答了，会通知你 \n  getFeeds():Observable<string[]>{\n     return this.getUrlReturn(this.apiUrlFeeds);\n  }\n\n\n  getQuestions():Observable<string[]>{\n    return this.getUrlReturn(this.apiUrlQuestionList);\n }\n\n/**\n *h回到问题接口\n *\n * @param {*} userId\n * @param {*} questionId\n * @param {*} content\n * @returns {Observable<string[]>}\n * @memberof RestProvider\n */\nanswer(userId,questionId,content):Observable<string[]>{\n    return this.getUrlReturn(this.apiUrlAnswer+\"?userid\"+userId+\"&questionid=\"+questionId+\"&content=\"+content);\n\n  }\nb\n/*\n/*   全局获取HTTP 请求方法\n工号：大力 \n*  @private \n*  @param{string}url\n @return {observable<string>[]}\n   @memberof RestProvider\n*/\nprivate getUrlReturn(url:string):Observable<string[]>{\nreturn this.http.get(url)\n          .map(this.extractData)\n          .catch(this.handleError);\n}\n\n/**\n *处理接口返回的数据，处理成JSON 格式\n *\n * @private\n * @param {Response} res\n * @returns\n * @memberof RestProvider\n */\nprivate extractData(res:Response){\n  let body=res.json();\n  return JSON.parse(body)||{};\n}\n/**\n *处理请求中的错误，考虑了各种情况的错误处理并在console 中显示erro\n *\n * @private\n * @param {(Response| any)} error\n * @returns\n * @memberof RestProvider\n */\nprivate handleError(error: Response| any){\n  let errMsg:string;\n  if(error instanceof Response){\n    const body=error.json()||'';\n    const err=body.error|| JSON.stringify(body);\n    errMsg=`${error.status}-${error.statusText||''}${err}`;\n  }else{\n    errMsg=error.message ? error.message :error.toString();\n  }\n  console.error(errMsg);\n  return Observable.throw(errMsg);\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/rest/rest.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport {ChatPage}from '../pages/chat/chat';\nimport {NotificationPage} from '../pages/notification/notification';\nimport {DiscoveryPage} from '../pages/discovery/discovery';\nimport {MorePage} from '../pages/more/more';\nimport {LoginPage} from '../pages/login/login';\nimport {UserPage} from '../pages/user/user';\nimport {HeadfacePage} from '../pages/headface/headface';\nimport {RegisterPage} from '../pages/register/register';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { DetailsPage } from '../pages/details/details';\nimport { QuestionPage } from '../pages/question/question';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { RestProvider } from '../providers/rest/rest';\nimport {HttpModule} from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http'; \nimport {IonicStorageModule } from '@ionic/storage';\nimport {Camera} from '@ionic-native/camera';\nimport { File } from '@ionic-native/file';\n\nimport {Transfer,TransferObject} from '@ionic-native/transfer';\n// TransferObject\nimport {FilePath} from '@ionic-native/File-path';\nimport { AnswerPage } from '../pages/answer/answer';\nimport { ChatdetailsPage } from '../pages/chatdetails/chatdetails';\nimport { EmojiProvider } from '../providers/emoji/emoji';\nimport {ComponentsModule} from '../components/components.module'\nimport { ChatserviceProvider } from '../providers/chatservice/chatservice';\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ChatPage,\n    MorePage,\n    NotificationPage,\n    DiscoveryPage,\n    TabsPage,\n    LoginPage,\n    AnswerPage,\n    UserPage,\n    RegisterPage,\n    HeadfacePage,\n    QuestionPage,\n    ChatdetailsPage,\n    DetailsPage,\n  \n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,//全局导入\n    IonicModule.forRoot(MyApp,{\nbackButtonText:'返回',\n    }),\n    ComponentsModule,\n    IonicStorageModule.forRoot(),\n    // 把全局的module 管控起来\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    MorePage,\n    ChatPage,\n    NotificationPage,\n    DiscoveryPage,\n    HomePage,\n    TabsPage,\n    LoginPage,\n    RegisterPage,\n    UserPage,\n    HeadfacePage,\n    QuestionPage,\n    DetailsPage,\n    AnswerPage,\n    ChatdetailsPage,\n  \n\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    RestProvider,\n    Camera,\n    File,\n    Transfer,\n    FilePath,\n    EmojiProvider,\n    ChatserviceProvider,\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// abstract 是抽象类 \r\nimport {Loading,LoadingController,ToastController,Toast} from 'ionic-angular';\r\nexport abstract class BaseUI{\r\nconstructor(){}\r\nprotected showLoading(loadingCtrl:LoadingController,\r\n    message:string):Loading{\r\n    let loader=loadingCtrl.create({\r\n        content:message, //传递的内容\r\n        dismissOnPageChange:true,   //当页面改变的时候是否自动dismiss 掉这个弹窗\r\n    });\r\n    loader.present();\r\n    return  loader;\r\n}\r\n\r\n/**\r\n *UI层的公用组建\r\n *\r\n * @protected\r\n * @param {ToastController} toastCtrl\r\n * @param {string} message\r\n * @returns {Toast}\r\n * @memberof BaseUI\r\n */\r\nprotected showToast(toastCtrl:ToastController,message:string):Toast{\r\n       let toast=toastCtrl.create({\r\n        //    写几个参数\r\n           message:message,\r\n           duration:3000,//显示3秒中\r\n           position:'bottom',//显示的位置\r\n       });\r\n       toast.present();\r\n       return toast;\r\n   }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/common/baseui.ts","import { NgModule } from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport { EmojipickerComponent } from './emojipicker/emojipicker';\n@NgModule({\n\tdeclarations: [EmojipickerComponent],\n\timports: [IonicPageModule .forChild(EmojipickerComponent),],\n\texports: [EmojipickerComponent]\n})\nexport class ComponentsModule {}\n//控制组件 ComponentsModule  导入全局 app.model。\n//   注意引入imports: [IonicPageModule.forChild(EmojipickerComponent)],\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import { Component,forwardRef} from '@angular/core';\nimport {ControlValueAccessor,NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {EmojiProvider} from '../../providers/emoji/emoji';\n\n/**\n * Generated class for the EmojipickerComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n// 实现emojipickerComponent 的providers\nexport const EMOJI_ACCESSOR:any={\n  provide:NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(()=>EmojipickerComponent),\n  multi:true,\n} \n@Component({\n  selector: 'emojipicker',\n  templateUrl: 'emojipicker.html',\n  providers:[EmojiProvider],\n})\n// 实现接口\nexport class EmojipickerComponent implements ControlValueAccessor {\n  // 定义\n  emojiArray=[];\n  content:string;\n  onChanged:Function;\n  onTouched:Function;\n  constructor(emojiProvider:EmojiProvider) {\n    this.emojiArray=emojiProvider.getEmojis();\n   }\n \n  writeValue(obj: any): void {\n    // Writes a new value to the element.\n   this.content=obj;\n  }\n  registerOnChange(fn: any): void {\n   this.onChanged=fn;\n  //  新的内容会做一个更改\n   this.setValue(this.content);\n  //  setValue 不仅仅是值做一个更改 还要绑定onChanged的function\n  }\n  registerOnTouched(fn: any): void {\n  this.onTouched=fn;\n  }\n// 再次处理新的内容赋值以及函数的绑定\nsetValue(val:any):any{\n  // 定义 setValue  接受一个参数，返回是 any\n  this.content+=val;//对值做变更，赋上值\n  if(this.content){\n    this.onChanged(this.content);\n  }\n  // 如果这个内容不为空，则把 新的内容onChange给绑定上去\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/emojipicker/emojipicker.ts"],"sourceRoot":""}